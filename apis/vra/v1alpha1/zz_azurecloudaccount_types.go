// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AzureCloudAccountInitParameters struct {

	// Azure Client Application ID.
	// Azure Client Application ID.
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// Azure Client Application Secret Key.
	// Azure Client Application Secret Key.
	ApplicationKeySecretRef v1.SecretKeySelector `json:"applicationKeySecretRef" tf:"-"`

	// Human-friendly description.
	// A human-friendly description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Name of Azure cloud account.
	// The name of this resource instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Set of region names enabled for the cloud account.
	// The set of region ids that will be enabled for this cloud account.
	// +listType=set
	Regions []*string `json:"regions,omitempty" tf:"regions,omitempty"`

	// Azure Subscription ID.
	// Azure Subscription ID.
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// Set of tag keys and values to apply to the cloud account. Example: [ { "key" : "vmware", "value": "provider" } ]
	Tags []AzureCloudAccountTagsInitParameters `json:"tags,omitempty" tf:"tags,omitempty"`

	// Azure Tenant ID.
	// Azure Tenant ID.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type AzureCloudAccountLinksInitParameters struct {
}

type AzureCloudAccountLinksObservation struct {
	Href *string `json:"href,omitempty" tf:"href,omitempty"`

	// +listType=set
	Hrefs []*string `json:"hrefs,omitempty" tf:"hrefs,omitempty"`

	Rel *string `json:"rel,omitempty" tf:"rel,omitempty"`
}

type AzureCloudAccountLinksParameters struct {
}

type AzureCloudAccountObservation struct {

	// Azure Client Application ID.
	// Azure Client Application ID.
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	// Date when the entity was created. The date is in ISO 8601 and UTC.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Human-friendly description.
	// A human-friendly description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Hypermedia as the Engine of Application State (HATEOAS) of entity.
	Links []AzureCloudAccountLinksObservation `json:"links,omitempty" tf:"links,omitempty"`

	// Name of Azure cloud account.
	// The name of this resource instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ID of organization that entity belongs to.
	// The id of the organization this entity belongs to.
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// Email of entity owner.
	// Email of the user that owns the entity.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// Set of region names enabled for the cloud account.
	// The set of region ids that will be enabled for this cloud account.
	// +listType=set
	Regions []*string `json:"regions,omitempty" tf:"regions,omitempty"`

	// Azure Subscription ID.
	// Azure Subscription ID.
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// Set of tag keys and values to apply to the cloud account. Example: [ { "key" : "vmware", "value": "provider" } ]
	Tags []AzureCloudAccountTagsObservation `json:"tags,omitempty" tf:"tags,omitempty"`

	// Azure Tenant ID.
	// Azure Tenant ID.
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`

	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	// Date when the entity was last updated. The date is ISO 8601 and UTC.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type AzureCloudAccountParameters struct {

	// Azure Client Application ID.
	// Azure Client Application ID.
	// +kubebuilder:validation:Optional
	ApplicationID *string `json:"applicationId,omitempty" tf:"application_id,omitempty"`

	// Azure Client Application Secret Key.
	// Azure Client Application Secret Key.
	// +kubebuilder:validation:Optional
	ApplicationKeySecretRef v1.SecretKeySelector `json:"applicationKeySecretRef" tf:"-"`

	// Human-friendly description.
	// A human-friendly description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Name of Azure cloud account.
	// The name of this resource instance.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Set of region names enabled for the cloud account.
	// The set of region ids that will be enabled for this cloud account.
	// +kubebuilder:validation:Optional
	// +listType=set
	Regions []*string `json:"regions,omitempty" tf:"regions,omitempty"`

	// Azure Subscription ID.
	// Azure Subscription ID.
	// +kubebuilder:validation:Optional
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// Set of tag keys and values to apply to the cloud account. Example: [ { "key" : "vmware", "value": "provider" } ]
	// +kubebuilder:validation:Optional
	Tags []AzureCloudAccountTagsParameters `json:"tags,omitempty" tf:"tags,omitempty"`

	// Azure Tenant ID.
	// Azure Tenant ID.
	// +kubebuilder:validation:Optional
	TenantID *string `json:"tenantId,omitempty" tf:"tenant_id,omitempty"`
}

type AzureCloudAccountTagsInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AzureCloudAccountTagsObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type AzureCloudAccountTagsParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// AzureCloudAccountSpec defines the desired state of AzureCloudAccount
type AzureCloudAccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AzureCloudAccountParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AzureCloudAccountInitParameters `json:"initProvider,omitempty"`
}

// AzureCloudAccountStatus defines the observed state of AzureCloudAccount.
type AzureCloudAccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AzureCloudAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AzureCloudAccount is the Schema for the AzureCloudAccounts API. Creates a vra_cloud_account_azure resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vra}
type AzureCloudAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.applicationId) || (has(self.initProvider) && has(self.initProvider.applicationId))",message="spec.forProvider.applicationId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.applicationKeySecretRef)",message="spec.forProvider.applicationKeySecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.regions) || (has(self.initProvider) && has(self.initProvider.regions))",message="spec.forProvider.regions is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subscriptionId) || (has(self.initProvider) && has(self.initProvider.subscriptionId))",message="spec.forProvider.subscriptionId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tenantId) || (has(self.initProvider) && has(self.initProvider.tenantId))",message="spec.forProvider.tenantId is a required parameter"
	Spec   AzureCloudAccountSpec   `json:"spec"`
	Status AzureCloudAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AzureCloudAccountList contains a list of AzureCloudAccounts
type AzureCloudAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AzureCloudAccount `json:"items"`
}

// Repository type metadata.
var (
	AzureCloudAccount_Kind             = "AzureCloudAccount"
	AzureCloudAccount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AzureCloudAccount_Kind}.String()
	AzureCloudAccount_KindAPIVersion   = AzureCloudAccount_Kind + "." + CRDGroupVersion.String()
	AzureCloudAccount_GroupVersionKind = CRDGroupVersion.WithKind(AzureCloudAccount_Kind)
)

func init() {
	SchemeBuilder.Register(&AzureCloudAccount{}, &AzureCloudAccountList{})
}
