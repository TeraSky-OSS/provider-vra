// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NSXVCloudAccountInitParameters struct {

	// Accept self-signed certificate when connecting to the cloud account.
	AcceptSelfSignedCert *bool `json:"acceptSelfSignedCert,omitempty" tf:"accept_self_signed_cert,omitempty"`

	// Identifier of a data collector VM deployed in the on premise infrastructure.
	DcID *string `json:"dcId,omitempty" tf:"dc_id,omitempty"`

	// Human-friendly description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Host name for NSX-V cloud account.
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// Name of NSX-V cloud account.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Password used to authenticate to the cloud account.
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// Set of tag keys and values to apply to the cloud account. Example: [ { "key" : "vmware", "value": "provider" } ]
	Tags []NSXVCloudAccountTagsInitParameters `json:"tags,omitempty" tf:"tags,omitempty"`

	// Username used to authenticate with the cloud account.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type NSXVCloudAccountLinksInitParameters struct {
}

type NSXVCloudAccountLinksObservation struct {
	Href *string `json:"href,omitempty" tf:"href,omitempty"`

	// +listType=set
	Hrefs []*string `json:"hrefs,omitempty" tf:"hrefs,omitempty"`

	Rel *string `json:"rel,omitempty" tf:"rel,omitempty"`
}

type NSXVCloudAccountLinksParameters struct {
}

type NSXVCloudAccountObservation struct {

	// Accept self-signed certificate when connecting to the cloud account.
	AcceptSelfSignedCert *bool `json:"acceptSelfSignedCert,omitempty" tf:"accept_self_signed_cert,omitempty"`

	// Cloud accounts associated to the cloud account.
	// +listType=set
	AssociatedCloudAccountIds []*string `json:"associatedCloudAccountIds,omitempty" tf:"associated_cloud_account_ids,omitempty"`

	// Date when entity was created. Date and time format is ISO 8601 and UTC.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Identifier of a data collector VM deployed in the on premise infrastructure.
	DcID *string `json:"dcId,omitempty" tf:"dc_id,omitempty"`

	// Human-friendly description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Host name for NSX-V cloud account.
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// ID of NSX-V cloud account.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Hypermedia as the Engine of Application State (HATEOAS) of entity.
	Links []NSXVCloudAccountLinksObservation `json:"links,omitempty" tf:"links,omitempty"`

	// Name of NSX-V cloud account.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// ID of organization that entity belongs to.
	OrgID *string `json:"orgId,omitempty" tf:"org_id,omitempty"`

	// Email of entity owner.
	Owner *string `json:"owner,omitempty" tf:"owner,omitempty"`

	// Set of tag keys and values to apply to the cloud account. Example: [ { "key" : "vmware", "value": "provider" } ]
	Tags []NSXVCloudAccountTagsObservation `json:"tags,omitempty" tf:"tags,omitempty"`

	// Date when entity was last updated. Date and time format is ISO 8601 and UTC.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// Username used to authenticate with the cloud account.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type NSXVCloudAccountParameters struct {

	// Accept self-signed certificate when connecting to the cloud account.
	// +kubebuilder:validation:Optional
	AcceptSelfSignedCert *bool `json:"acceptSelfSignedCert,omitempty" tf:"accept_self_signed_cert,omitempty"`

	// Identifier of a data collector VM deployed in the on premise infrastructure.
	// +kubebuilder:validation:Optional
	DcID *string `json:"dcId,omitempty" tf:"dc_id,omitempty"`

	// Human-friendly description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Host name for NSX-V cloud account.
	// +kubebuilder:validation:Optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// Name of NSX-V cloud account.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Password used to authenticate to the cloud account.
	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// Set of tag keys and values to apply to the cloud account. Example: [ { "key" : "vmware", "value": "provider" } ]
	// +kubebuilder:validation:Optional
	Tags []NSXVCloudAccountTagsParameters `json:"tags,omitempty" tf:"tags,omitempty"`

	// Username used to authenticate with the cloud account.
	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type NSXVCloudAccountTagsInitParameters struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NSXVCloudAccountTagsObservation struct {
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type NSXVCloudAccountTagsParameters struct {

	// +kubebuilder:validation:Optional
	Key *string `json:"key" tf:"key,omitempty"`

	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// NSXVCloudAccountSpec defines the desired state of NSXVCloudAccount
type NSXVCloudAccountSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NSXVCloudAccountParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NSXVCloudAccountInitParameters `json:"initProvider,omitempty"`
}

// NSXVCloudAccountStatus defines the observed state of NSXVCloudAccount.
type NSXVCloudAccountStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NSXVCloudAccountObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NSXVCloudAccount is the Schema for the NSXVCloudAccounts API. Creates a vra_cloud_account_nsxv resource.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vra}
type NSXVCloudAccount struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.hostname) || (has(self.initProvider) && has(self.initProvider.hostname))",message="spec.forProvider.hostname is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.passwordSecretRef)",message="spec.forProvider.passwordSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.username) || (has(self.initProvider) && has(self.initProvider.username))",message="spec.forProvider.username is a required parameter"
	Spec   NSXVCloudAccountSpec   `json:"spec"`
	Status NSXVCloudAccountStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NSXVCloudAccountList contains a list of NSXVCloudAccounts
type NSXVCloudAccountList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NSXVCloudAccount `json:"items"`
}

// Repository type metadata.
var (
	NSXVCloudAccount_Kind             = "NSXVCloudAccount"
	NSXVCloudAccount_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NSXVCloudAccount_Kind}.String()
	NSXVCloudAccount_KindAPIVersion   = NSXVCloudAccount_Kind + "." + CRDGroupVersion.String()
	NSXVCloudAccount_GroupVersionKind = CRDGroupVersion.WithKind(NSXVCloudAccount_Kind)
)

func init() {
	SchemeBuilder.Register(&NSXVCloudAccount{}, &NSXVCloudAccountList{})
}
